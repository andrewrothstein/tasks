---
version: '3'
vars:
  k8s_ver: 1.26.3
tasks:
  config-repositories:
    cmds:
      - clusterctl config repositories -o yaml
  help:
    cmds:
      - clusterctl init --help
  default:
    deps:
      - config-repositories
  init:
    vars:
      # bootstrap provider, e.g. kubeadm:v1.3.3
      b: '{{ .b }}'
      # control plane provider, e.g. kubeadm:v1.3.3
      c: '{{ .c }}'
      # infrastructure provider, e.g. vcluster:v0.1.3
      i: '{{ .i }}'
    cmds:
      - |
        clusterctl \
          init \
          {{ if .b }}-b {{ .b | quote }}{{ end }} \
          {{ if .c }}-c {{ .c | quote }}{{ end }} \
          {{ if .i }}-i {{ .i | quote }}{{ end }}
  create_workload_cluster:
    vars:
      # kubectl command, i.e. apply or delete
      kk: '{{ .kk | default "apply" }}'
      # workload cluster template variant/flavor
      f: '{{ .f }}'
      # workload cluster name
      n: '{{ .n }}'
      # workload cluster k8s version
      v: '{{ .v | default .k8s_ver }}'
      ## cluster size / machine counts
      control_plane_machine_count: '{{ .control_plane_machine_count }}'
      worker_machine_count: '{{ .worker_machine_count }}'
      target_namespace: '{{ .target_namespace }}'
    env:
      HELM_VALUES: ''
    cmds:
      - |
        clusterctl \
          generate \
          cluster {{ .n | quote }} \
          {{ if .f -}}
          -f {{ .f | quote }} \
          {{ end -}}
          {{- if .v -}}
          --kubernetes-version {{ .v | quote }} \
          {{ end -}}
          {{- if .control_plane_machine_count -}}
          --control-plane-machine-count {{ .control_plane_machine_count }} \
          {{ end -}}
          {{- if .worker_machine_count -}}
          --worker-machine-count {{ .worker_machine_count }} \
          {{ end -}}
          | kubectl {{ .kk | quote }} -f -
  apply:
    vars:
      # workload cluster k8s version
      v: '{{ .v | default .k8s_ver }}'
      i: '{{ .i | default "vcluster" }}'
    deps:
      - task: init
        vars:
          i: '{{ .i }}'
    cmds:
      - task: create_workload_cluster
        vars:
          kk: apply
          n: dev
          v: '{{ .v }}'
      - task: create_workload_cluster
        vars:
          kk: apply
          n: tst
          v: '{{ .v }}'
  delete:
    vars:
      # workload cluster k8s version
      v: '{{ .v | default .k8s_ver }}'
    deps:
      - task: workload
        vars:
          kk: delete
          n: tst
          v: '{{ .v }}'
      - task: workload
        vars:
          kk: delete
          n: dev
          v: '{{ .v }}'

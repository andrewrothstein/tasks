---
version: '3'
vars:
  k8s_ver: 1.27.2
tasks:
  config-repositories:
    cmds:
      - clusterctl config repositories -o yaml
  ls-provider:
    internal: true
    vars:
      t: '{{ .t | default "Bootstrap" }}'
    cmds:
      - |
        clusterctl config repositories \
          -o yaml | yq -r '.[] | select(.ProviderType=="{{ .t }}Provider") | .Name'
  ls-bootstrap-providers:
    cmds:
      - task: ls-provider
        vars:
          t: Bootstrap
  ls-controlplane-providers:
    cmds:
      - task: ls-provider
        vars:
          t: ControlPlane
  ls-infrastructure-providers:
    cmds:
      - task: ls-provider
        vars:
          t: Infrastructure
  help:
    cmds:
      - clusterctl init --help
  init:
    vars:
      # bootstrap provider, e.g. kubeadm:v1.3.3
      b: '{{ .b }}'
      # control plane provider, e.g. kubeadm:v1.3.3
      c: '{{ .c }}'
      # infrastructure provider, e.g. vcluster:v0.1.3
      i: '{{ .i }}'
    cmds:
      - >-
        clusterctl
        init
        {{- if .b }} -b {{ .b | quote }}{{ end -}}
        {{- if .c }} -c {{ .c | quote }}{{ end -}}
        {{- if .i }} -i {{ .i | quote }}{{ end }}
  workload-cluster:
    vars:
      # kubectl command, i.e. apply or delete
      kk: '{{ .kk | default "apply" }}'
      # workload cluster template variant/flavor
      f: '{{ .f }}'
      # workload cluster name
      n: '{{ .n }}'
      # workload cluster k8s version
      v: '{{ .v | default .k8s_ver }}'
      ## cluster size / machine counts
      control_plane_machine_count: '{{ .control_plane_machine_count }}'
      worker_machine_count: '{{ .worker_machine_count }}'
      target_namespace: '{{ .target_namespace }}'
    env:
      HELM_VALUES: ''
    cmds:
      - |
        clusterctl \
          generate \
          cluster {{ .n | quote }} \
          {{ if .f -}}
          -f {{ .f | quote }} \
          {{ end -}}
          {{- if .v -}}
          --kubernetes-version {{ .v | quote }} \
          {{ end -}}
          {{- if .control_plane_machine_count -}}
          --control-plane-machine-count {{ .control_plane_machine_count }} \
          {{ end -}}
          {{- if .worker_machine_count -}}
          --worker-machine-count {{ .worker_machine_count }} \
          {{ end -}}
          | kubectl {{ .kk | quote }} -f -
  get-kubeconfig:
    vars:
      n: '{{ .n }}'
      kubeconfig: "~/.kube/{{ .n }}-config"
    cmds:
      - clusterctl get kubeconfig {{ .n }} > {{ .kubeconfig }}
  kk:
    vars:
      n: '{{ .n }}'
      kk: '{{ .kk }}'
    deps:
      - task: get-kubeconfig
        vars:
          n: '{{ .n }}'
    cmds:
      - export KUBECONFIG="~/.kube/{{ .n }}-config"
      - '{{ if .kk }}{{ .kk }}{{ end }}'
  default:
    deps:
      - task: apply
        vars:
          i: vcluster
  install:
    deps:
      - apply
  apply:
    vars:
      i: '{{ .i }}'
    deps:
      - task: init
        vars:
          i: '{{ .i }}'
    cmds:
      - task: workload-cluster
        vars:
          kk: apply
          n: dev-1
          v: '{{ .v }}'
      - task: workload-cluster
        vars:
          kk: apply
          n: tst-1
          v: '{{ .v }}'
  delete:
    vars:
      # workload cluster k8s version
      v: '{{ .v | default .k8s_ver }}'
    deps:
      - task: workload-cluster
        vars:
          kk: delete
          n: tst-1
          v: '{{ .v }}'
      - task: workload-cluster
        vars:
          kk: delete
          n: dev-1
          v: '{{ .v }}'

---
version: '3'
tasks:
  ns-label:
    vars:
      n: '{{ .n }}'
      labels: '{{ .labels }}'
    cmds:
      - kubectl label namespace {{ .n | quote }} {{ .labels | quote }} --overwrite
  ns-create:
    vars:
      n: '{{ .n }}'
    cmds:
      - kubectl create namespace {{ .n | quote }}
    status:
      - kubectl get namespace {{ .n | quote }}
  ns-delete:
    vars:
      n: '{{ .n }}'
    cmds:
      - kubectl delete namespace {{ .n | quote }}
  apply:
    vars:
      n: '{{ .n }}'
      f: '{{ .f }}'
    cmds:
      - |
        kubectl \
          apply \
          {{ if .n }}-n {{ .n | quote }}{{ end }} \
          -f {{ .f | quote }}
  delete:
    vars:
      n: '{{ .n }}'
      f: '{{ .f }}'
    cmds:
      - |
        kubectl \
          delete \
          {{ if .n }} -n {{ .n | quote }}{{ end }} \
          -f {{ .f | quote }}
  kapply:
    vars:
      n: '{{ .n }}'
      k: '{{ .k }}'
    cmds:
      - |
        kubectl \
          apply \
          {{ if .n }} -n {{ .n | quote }}{{ end }} \
          -k {{ .k | quote }}
  kdelete:
    vars:
      n: '{{ .n }}'
      k: '{{ .k }}'
    preconditions:
      - kubectl get namespace {{ .n | quote }}
    cmds:
      - |
        kubectl \
          delete \
          {{ if .n }} -n {{ .n | quote }}{{ end }} \
          -k {{ .k | quote }}
  patch:
    vars:
      n: '{{ .n }}'
      typeofthing: '{{ .typeofthing }}'
      thingname: '{{ .thingname }}'
      ty: '{{ .ty }}'
      patch: '{{ .patch }}'
    cmds:
      - |
        kubectl \
          -n {{ .n | quote }} \
          patch \
          {{ .typeofthing | quote }} \
          {{ .thingname | quote }} \
          "--type={{ .ty }}" \
          --patch {{ .patch | quote }}
  wait-for-pod:
    vars:
      for: '{{ .for }}'
      n: '{{ .n }}'
      k: '{{ .k }}'
      v: '{{ .v }}'
    cmds:
      - |
          kubectl \
            wait --for={{ .for }} \
            -n {{ .n | quote }} pod \
            -l '{{ .k }}={{ .v }}'
  wait-for-pod-ready:
    vars:
      n: '{{ .n }}'
      k8s_app: '{{ .k8s_app }}'
    deps:
      - task: wait-for-pod
        vars:
          for: condition=ready
          n: '{{ .n }}'
          k: k8s-app
          v: '{{ .k8s_app }}'

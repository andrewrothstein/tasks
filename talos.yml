---
version: '3'
vars:
  cluster_dir: '{{ .USER_WORKING_DIR }}'
  cluster_endpoint: 192.168.1.16
  cluster_endpoints: 192.168.1.16,192.168.1.17,192.168.1.18
  cluster_secrets_yaml: '{{ .cluster_dir }}/secrets.yaml'
  cluster_controlplane_yaml: '{{ .cluster_dir }}/controlplane.yaml'
  cluster_worker_yaml: '{{ .cluster_dir }}/worker.yaml'
  cluster_talosconfig: '{{ .cluster_dir }}/talosconfig'
  cluster_name: talos-bootstrap
  cluster_kubeconfig: '{{ .cluster_dir }}/.kube/config'
tasks:
  talosctl:
    internal: true
    vars:
      talosctl_cmd: '{{ .talosctl_cmd }}'
      insecure: '{{ .insecure | default "false" }}'
      nodes: '{{ .nodes }}'
      endpoints: '{{ .endpoints }}'
      talos_version: '{{ .talos_version }}'
      talosconfig: '{{ .talosconfig }}'
      force: '{{ .force | default "false" }}'
      extraArgs: '{{ .extraArgs }}'
    cmds:
      - |-
        cd {{ .cluster_dir }};
        talosctl {{ .talosctl_cmd }}
        {{- if eq .insecure "true" }} \
          --insecure
        {{- end }}
        {{- if .nodes }} \
          -n={{ .nodes | quote }}
        {{- end }}
        {{- if .endpoints }} \
          -e={{ .endpoints | quote }}
        {{- end }}
        {{- if .talosconfig }} \
          --talosconfig={{ .talosconfig | quote }}
        {{- end }}
        {{- if .talos_version }} \
          --talos-version {{ .talos_version | quote }}
        {{- end }}
        {{- if eq "true" .force }} \
          --force
        {{- end }}
        {{- if .extraArgs }}
        {{- .extraArgs }}
        {{- end }}
  gen-secrets:
    vars:
      internal: true
      output_file: '{{ .cluster_secrets_yaml }}'
    cmds:
      - task: talosctl
        vars:
          talosctl_cmd: gen secrets
          extraArgs: |
            {{- if .output_file }} \
              --output-file={{ .output_file | quote }}
            {{- end }}
    status:
      - test -f {{ .output_file | quote }}
  gen-config:
    internal: true
    vars:
      cluster_name: '{{ .cluster_name }}'
      cluster_endpoint: '{{ .cluster_endpoint }}'
      with_secrets: '{{ .with_secrets }}'
      with_docs: '{{ .with_docs | default "false" }}'
      with_examples: '{{ .with_examples | default "false" }}'
      patches: '{{ .patches }}'
      force: '{{ .force }}'
    cmds:
      - task: talosctl
        vars:
          talosctl_cmd: >-
            gen config
            {{ .cluster_name | quote }}
            {{ .cluster_endpoint | quote }}
          force: '{{ .force }}'
          extraArgs: |-
            {{- if .with_docs }} \
              --with-docs={{ .with_docs }}
            {{- end }}
            {{- if .with_examples }} \
              --with-examples={{ .with_examples }}
            {{- end }}
            {{- if .patches }} \
              {{ .patches }}
            {{- end }}
            {{- if .with_secrets }} \
              --with-secrets {{ .with_secrets | quote }}
            {{- end }}
  test-gen-config:
    cmds:
      - task: gen-config
        vars:
          force: "true"
          patches: >-
            --config-patch=@all.yaml
            --config-patch=@network-eno1.yaml
            --config-patch=@samsung-disk.json
            --config-patch-control-plane=@vip.json
          with_secrets: '{{ .cluster_secrets_yaml }}'
  bootstrap:
    vars:
      nodes: '{{ .nodes }}'
      endpoints: '{{ .endpoints }}'
      talosconfig: '{{ .talosconfig }}'
    cmds:
      - task: talosctl
        vars:
          talosctl_cmd: bootstrap
          nodes: '{{ .nodes }}'
          endpoints: '{{ .endpoints }}'
          talosconfig: '{{ .talosconfig }}'
  test-bootstrap:
    cmds:
      - task: bootstrap
        vars:
          nodes: 192.168.1.16
          endpoints: 192.168.1.16
          talosconfig: '{{ .cluster_talosconfig }}'
  disks:
    vars:
      insecure: '{{ .insecure }}'
      nodes: '{{ .nodes }}'
      talosconfig: '{{ .talosconfig }}'
    cmds:
      - task: talosctl
        vars:
          talosctl_cmd: disks
          insecure: '{{ .insecure }}'
          nodes: '{{ .nodes }}'
          talosconfig: '{{ .talosconfig }}'
  test-disks:
    cmds:
      - task: disks
        vars:
          insecure: "true"
          nodes: 192.168.1.19
  kubeconfig:
    vars:
      local_path: '{{ .local_path }}'
      force: '{{ .force }}'
      nodes: '{{ .nodes }}'
      endpoints: '{{ .endpoints }}'
      talosconfig: '{{ .talosconfig }}'
      merge: '{{ .merge | default "true" }}'
    cmds:
      - task: talosctl
        vars:
          talosctl_cmd: kubeconfig{{ if .local_path }} {{ .local_path | quote }}{{ end }}
          nodes: '{{ .nodes }}'
          endpoints: '{{ .endpoints }}'
          talosconfig: '{{ .talosconfig }}'
          force: '{{ .force }}'
          extraArgs: |-
            {{- if eq .merge "true" }} \
              --merge
            {{- end }}
  test-kubeconfig:
    cmds:
      - task: kubeconfig
        vars:
          local_path: '{{ .cluster_kubeconfig }}'
          nodes: 192.168.1.16
          talosconfig: '{{ .cluster_talosconfig }}'
          force: "true"
  k9s:
    cmds:
      - |
        export KUBECONFIG={{ .cluster_kubeconfig | quote }}
        k9s
  apply-config:
    vars:
      insecure: '{{ .insecure }}'
      nodes: '{{ .nodes }}'
      endpoints: '{{ .endpoints }}'
      file: '{{ .file }}'
      talosconfig: '{{ .talosconfig }}'
      mode: '{{ .mode }}'
      patches: '{{ .patches }}'
    cmds:
      - task: talosctl
        vars:
          talosctl_cmd: apply-config
          insecure: '{{ .insecure }}'
          nodes: '{{ .nodes }}'
          endpoints: '{{ .endpoints | default .cluster_endpoint }}'
          talosconfig: '{{ .talosconfig }}'
          extraArgs: |-
            {{- if .file }} \
              --file={{ .file | quote }}
            {{- end }}
            {{- if .mode }} \
              --mode={{ .mode | quote }}
            {{- end }}
            {{- if .patches }} \
            {{ .patches }}
            {{- end }}
  apply-config-insecure:
    vars:
      nodes: '{{ .nodes }}'
      file: '{{ .file }}'
      patches: '{{ .patches }}'
    cmds:
      - task: apply-config
        vars:
          insecure: "true"
          nodes: '{{ .nodes }}'
          file: '{{ .file }}'
          patches: '{{ .patches }}'
  test-apply-config-controlplane-insecure:
    cmds:
      - task: apply-config-insecure
        vars:
          nodes: 192.168.1.16,192.168.1.17,192.168.1.18
          file: '{{ .cluster_controlplane_yaml }}'
  test-apply-config-worker-special-insecure:
    cmds:
      - task: apply-config-insecure
        vars:
          nodes: 192.168.1.19
          file: '{{ .cluster_worker_yaml }}'
          patches: >-
            --config-patch=@network-eth0.yaml
            --config-patch=@sandisk.json
  test-apply-config-worker-insecure:
    cmds:
      - task: apply-config-insecure
        vars:
          nodes: 192.168.1.20
          file: '{{ .cluster_worker_yaml }}'
  test-apply-config-worker-19-insecure:
    cmds:
      - task: apply-config-insecure
        vars:
          nodes: 192.168.1.19
          file: '{{ .cluster_worker_yaml }}'
          patches: |-
            \
              --config-patch=@network-eth0.yaml \
              --config-patch=@sandisk.json
  apply-config-controlplane:
    vars:
      nodes: '{{ .nodes }}'
      endpoints: '{{ .endpoints }}'
    cmds:
      - task: apply-config
        vars:
          nodes: '{{ .nodes }}'
          endpoints: '{{ .endpoints }}'
          file: '{{ .cluster_controlplane_yaml }}'
          talosconfig: '{{ .cluster_talosconfig }}'
  test-apply-config-controlplane:
    cmds:
      - task: apply-config-controlplane
        vars:
          nodes: 192.168.1.16,192.168.1.17,192.168.1.18
          endpoints: 192.168.1.16
  apply-config-worker:
    vars:
      nodes: '{{ .nodes }}'
      endpoints: '{{ .endpoints }}'
      file: '{{ .file | default .cluster_worker_yaml }}'
      patches: '{{ .patches }}'
      talosconfig: '{{ .talosconfig | default .cluster_talosconfig }}'
    cmds:
      - task: apply-config
        vars:
          nodes: '{{ .nodes }}'
          endpoints: '{{ .endpoints }}'
          file: '{{ .file }}'
          patches: '{{ .patches }}'
          talosconfig: '{{ .talosconfig }}'
  apply-config-worker-19:
    cmds:
      - task: apply-config-worker
        vars:
          nodes: 192.168.1.19
          patches: |-
            \
              --config-patch=@network-eth0.yaml \
              --config-patch=@sandisk.json
  apply-config-workers:
    cmds:
      - task: apply-config-worker
        vars:
          nodes: 192.168.1.20


---
version: '3'
vars:
  DEFAULT_CLUSTER_NAME: bootstrap
  DEFAULT_REGISTRY_NAME: kind-registry
  DEFAULT_REGISTRY_HOST_PORT: 5000
includes:
  docker-registry:
    taskfile: docker-registry.yml
    vars:
      NAME: '{{ .NAME | default .DEFAULT_REGISTRY_NAME }}'
tasks:
  up:
    vars:
      REGISTRY_NAME: '{{ .REGISTRY_NAME | default .DEFAULT_REGISTRY_NAME }}'
      REGISTRY_HOST_PORT: '{{ .REGISTRY_HOST_PORT | default .DEFAULT_REGISTRY_HOST_PORT }}'
      CLUSTER_NAME: '{{ .CLUSTER_NAME | default .DEFAULT_CLUSTER_NAME }}'
    deps:
      - docker-registry:apply
    cmds:
      - |
        kind create cluster -n {{ .CLUSTER_NAME | quote }} --config=- <<HERE
        ---
        kind: Cluster
        apiVersion: kind.x-k8s.io/v1alpha4
        nodes:
        - role: control-plane
          extraMounts:
            - hostPath: /var/run/docker.sock
              containerPath: /var/run/docker.sock
        containerdConfigPatches:
        - |-
          [plugins."io.containerd.grpc.v1.cri".registry.mirrors."localhost:{{ .REGISTRY_HOST_PORT }}"]
            endpoint = ["http://{{ .REGISTRY_NAME }}:{{ .REGISTRY_HOST_PORT }}"]
        HERE
      - docker network connect kind {{ .REGISTRY_NAME | quote }} || true
      - |
        kubectl apply -f - <<EOF
        ---
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: local-registry-hosting
          namespace: kube-public
        data:
          localRegistryHosting.v1: |
            host: "localhost:{{ .REGISTRY_HOST_PORT }}"
            help: "https://kind.sigs.k8s.io/docs/user/local-registry/"
        EOF
    status:
      - kind get clusters | grep {{ .CLUSTER_NAME | quote }}
  delete:
    vars:
      CLUSTER_NAME: '{{ .CLUSTER_NAME | default .DEFAULT_CLUSTER_NAME }}'
    cmds:
      - kind delete clusters {{ .CLUSTER_NAME | quote }}
      - task: docker-registry:delete

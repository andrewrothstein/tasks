---
version: '3'
includes:
  cc: cookiecutter.yml
  gh: gh.yml
  ansible-galaxy: ansible-galaxy.yml
  local:
    taskfile: ansible.yml
    vars:
      i: 'localhost,'
      c: local
      target: localhost
      limit: localhost
  docker-buildx: docker-buildx.yml
tasks:
  sauce:
    internal: true
    vars:
      dir: '{{ .dir }}'
    deps:
      - task: gh:rename-default-branch
        vars:
          repo_dir: '{{ .dir }}'
    cmds:
      - |
        cd {{ .dir | quote }};
        gengithubactions;
        if [ -e "requirements.txt" ];
        then
          git rm -f requirements.txt
        fi;
  create:
    vars:
      git_org: '{{ .git_org | default "https://github.com/andrewrothstein" }}'
      roles_dir: '{{ .roles_dir | default "${HOME}/git/github.com/andrewrothstein" }}'
      name: '{{ .name }}'
      role_name: ansible-{{ .name }}
      git_repo: '{{ .git_org }}/{{ .role_name }}'
      dir: '{{ .roles_dir }}/{{ .role_name }}'
      public: true
    cmds:
      - task: cc
        vars:
          cc_args: >-
            https://github.com/andrewrothstein/cookiecutter-ansible-role.git
            role_name={{ .name | quote }}
          output_dir: '{{ .roles_dir }}'
          no_input: "true"
      - task: gh:create-repo
        vars:
          dir: '{{ .roles_dir }}'
          repo: '{{ .role_name }}'
  clone:
    vars:
      git_org: '{{ .git_org | default "https://github.com/andrewrothstein" }}'
      roles_dir: '{{ .roles_dir | default "${HOME}/git/github.com/andrewrothstein" }}'
      name: '{{ .name }}'
      infix: '{{ .infix | default "-" }}'
      role_name: ansible{{ .infix }}{{ .name }}
      git_repo: '{{ .git_org }}/{{ .role_name }}'
      dir: '{{ .roles_dir }}/{{ .role_name }}'
    cmds:
      - |
        if [ ! -d {{ .dir | quote }} ];
        then
          git clone {{ .git_repo | quote }} {{ .dir | quote }}
        else
          cd {{ .dir }}; git pull
        fi
      - task: sauce
        vars:
          dir: '{{ .dir }}'
  local:
    cmds:
      - task: ansible-galaxy:install
        vars:
          force: 'true'
      - task: ansible-galaxy:install
        vars:
          requirements_dir: '{{ .USER_WORKING_DIR }}/meta'
          force: 'true'
      - task: ansible-galaxy:install
        vars:
          requirements: test-requirements.yml
          force: 'true'
      - task: local:playbook
        vars:
          playbook: test.yml
  default:
    vars:
      OS: '{{ .OS | default "debian" }}'
      OS_VER: '{{ .OS_VER | default "bookworm" }}'
      TARGET_SLUG:
        sh: basename {{ .USER_WORKING_DIR | quote }}
      TAG: 0.0.0-{{ .OS }}.{{ .OS_VER }}
      BAKEFILE: https://github.com/andrewrothstein/bake-ansible-images-v1.git#develop
    env:
      UPSTREAM_TAG: '{{ .TAG }}'
      TARGET_SLUG: '{{ .TARGET_SLUG }}'
      TARGET_TAG: '{{ .TAG }}'
    cmds:
      - |-
        cd {{ .USER_WORKING_DIR | quote }}
        docker \
          buildx bake \
            {{ .BAKEFILE | quote }} \
            --load \
            --progress plain
  checksums:
    internal: true
    vars:
      append: '{{ .append }}'
      dir: '{{ .dir | default .USER_WORKING_DIR }}'
      f: '{{ .f }}'
      target: '{{ .target | default "defaults/main.yml" }}'
    cmds:
      - |-
        cd {{ .dir | quote }};
        if [ -e {{ .f | quote }} ];
        then
          "{{ .dir }}/{{ .f }}" {{ if eq .append "true" }} >> {{ .target | quote }}{{ end }}
        else
          echo {{ .f | quote }} not found. skipping...
        fi
  update-checksums:
    cmds:
      - task: checksums
        vars:
          f: update-checksums.sh
          append: 'false'
      - task: checksums
        vars:
          f: dl-checksum.sh
          append: 'true'
      - task: checksums
        vars:
          f: dl-checksums.sh
          append: 'true'

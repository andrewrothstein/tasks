---
version: '3'
tasks:
  check:
    vars:
      chart_repo_name: '{{ .chart_repo_name }}'
      chart: '{{ .chart }}'
      chart_ver: '{{ .chart_ver }}'
    cmds:
      - |
        fq_chart="{{ .chart_repo_name }}/{{ .chart }}"
        latest=$(helm search repo "${fq_chart}" -o json | \
          jq -r '. | first | .version')
        if [ {{ .chart_ver | quote }} != "${latest}" ];
        then
          echo "please upgrade ${fq_chart} from {{ .chart_ver }} to ${latest}"
        else
          echo "${fq_chart} at latest (${latest})"
        fi
  upgrade:
    vars:
      install: '{{ .install | default "true" }}'
      namespace: '{{ .namespace }}'
      create_namespace: '{{ .create_namespace | default "false" }}'
      name: '{{ .name }}'
      chart_repo_name: '{{ .chart_repo_name }}'
      chart: '{{ .chart }}'
      chart_ver: '{{ .chart_ver }}'
      wait: '{{ .wait | default "true" }}'
      timeout: '{{ .timeout | default "10m" }}'
      helm_args: '{{ .helm_args | default "" }}'
    cmds:
      - |-
        helm \
          upgrade
          {{- if .namespace }} \
          -n {{ .namespace | quote }}
          {{- end }}
          {{- if eq "true" .install }} \
          --install
          {{- end }}
          {{- if eq "true" .create_namespace }}  \
          --create-namespace
          {{- end }} \
          {{ .name | quote }} \
          "{{ if .chart_repo_name }}{{ .chart_repo_name }}/
          {{- end }}{{ .chart }}"
          {{- if .chart_ver }} \
          --version {{ .chart_ver | quote }}
          {{- end }}
          {{- if eq "true" .wait }} \
          --wait --timeout {{ .timeout | quote }}
          {{- end }}
          {{- if .helm_args }} \
          {{ .helm_args }}
          {{- end }}
  install:
    vars:
      namespace: '{{ .namespace }}'
      create_namespace: '{{ .create_namespace | default "false" }}'
      name: '{{ .name }}'
      chart_repo_name: '{{ .chart_repo_name }}'
      chart: '{{ .chart }}'
      chart_ver: '{{ .chart_ver }}'
      wait: '{{ .wait | default "true" }}'
      timeout: '{{ .timeout | default "10m" }}'
      helm_args: '{{ .helm_args | default "" }}'
    cmds:
      - |-
        helm \
          install
          {{- if .namespace }} \
          -n {{ .namespace | quote }}
          {{- end }}
          {{- if eq "true" .create_namespace }}  \
          --create-namespace
          {{- end }} \
          {{ .name | quote }} \
          {{ if .chart_repo_name }}{{ .chart_repo_name }}/{{ end -}}
          {{- .chart -}}
          {{- if .chart_ver }} \
          --version {{ .chart_ver | quote }}
          {{- end }}
          {{- if eq "true" .wait }} \
          --wait --timeout {{ .timeout | quote }}
          {{- end }}
          {{- if .helm_args }} \
          {{ .helm_args }}
          {{- end }}
    status:
      - |
        helm \
          list \
          -n {{ .namespace | quote }} \
          -o json \
          | jq -e '.[] | select(.name=={{ .name | quote }})'
  delete:
    vars:
      namespace: '{{ .namespace }}'
      name: '{{ .name }}'
      wait: '{{ .wait | default "true" }}'
    preconditions:
      - |
        helm \
          list
          {{- if .namespace }} \
          -n {{ .namespace | quote }}
          {{- end }} \
          -o json \
          | jq -e '.[] | select(.name=={{ .name | quote }})'
    cmds:
      - |
        helm \
          delete
          {{- if .namespace }} \
          -n {{ .namespace | quote }}
          {{- end }}
          {{- if eq "true" .wait }} \
          --wait
          {{- end }} \
          {{ .name | quote }}
